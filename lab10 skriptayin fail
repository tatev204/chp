import os  
import hashlib  
import gzip  

#  IP hasceneri hamar
def display_ip_addresses():
    os.system("ipconfig")  

# depi server janaparhi hamar 
def trace_route():
    host = input("Enter hostname or URL: ") 
    os.system(f"tracert {host}")  
    
# IP hascen stanalu hamar
def get_ip_address():
    host = input("Enter hostname or URL: ")  
    os.system(f"nslookup {host}")  
    

def encrypt_text():
    text = input("Enter text to encrypt: ")  
    # ASCII +3
    encrypted_text = ''.join(chr(ord(c) + 3) for c in text)
    print(f"Encrypted text: {encrypted_text}")  


def decrypt_text():
    encrypted_text = input("Enter text to decrypt: ")  
    #  ASCII  -3 
    decrypted_text = ''.join(chr(ord(c) - 3) for c in encrypted_text)
    print(f"Decrypted text: {decrypted_text}")  
# fayly sexmelu hamar
def compress_file():
    file = input("Enter the file to compress: ")  
    # sexmum gzipov
    with open(file, 'rb') as f_in, gzip.open(f"{file}.gz", 'wb') as f_out:
        f_out.writelines(f_in)
    print("File compressed.")  

# apasexmelu hamar
def decompress_file():
    file = input("Enter the compressed file: ")  
    # apasexmum gzipov
    with gzip.open(file, 'rb') as f_in, open(file.rstrip('.gz'), 'wb') as f_out:
        f_out.write(f_in.read())
    print("File decompressed.")  


def calculate_file_hash():
    file = input("Enter the file to calculate hash: ")  
    with open(file, 'rb') as f:
        file_data = f.read()  
    # hashvarkum  SHA256 heshy
    file_hash = hashlib.sha256(file_data).hexdigest()
    print(f"SHA256 Hash: {file_hash}")  


def main():
    while True:
      
        print("\n==== Main Menu ====")
        print("1. Display IPv4 and IPv6 addresses")
        print("2. Trace route to a host")
        print("3. Get IP address of a host")
        print("4. Encrypt text")
        print("5. Decrypt text")
        print("6. Compress a file")
        print("7. Decompress a file")
        print("8. Calculate file hash")
        print("9. Exit")
        choice = input("Choose an option: ")  

       
        if choice == '1':
            display_ip_addresses()
        elif choice == '2':
            trace_route()
        elif choice == '3':
            get_ip_address()
        elif choice == '4':
            encrypt_text()
        elif choice == '5':
            decrypt_text()
        elif choice == '6':
            compress_file()
        elif choice == '7':
            decompress_file()
        elif choice == '8':
            calculate_file_hash()
        elif choice == '9':
            print("Exiting...")  # Ելք
            break
        else:
            print("Invalid choice. Try again.")  #sxali depqum


if __name__ == "__main__":
    main()
